@* MudanzaApp/Pages/MyMoves.razor *@
@page "/my-moves"
@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization
@attribute [Authorize]
@inject IMudanzaService MudanzaService
@inject IStringLocalizer<SharedResource> L
@inject NavigationManager NavigationManager
@inject IToastService ToastService
@inject AuthenticationStateProvider AuthStateProvider

<PageTitle>@L["MyMoves"] - @L["AppName"]</PageTitle>

    <div class="py-4">
        <!-- Page header -->
        <div class="bg-white dark:bg-gray-800 shadow-sm rounded-lg px-4 py-5 border-b border-gray-200 dark:border-gray-700 sm:px-6 mb-6">
            <div class="flex flex-wrap items-center justify-between">
                <div>
                    <h1 class="text-3xl font-bold text-gray-900 dark:text-white">
                        @L["MyMoves"]
                </h1>
                <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">
                    @if (CultureInfo.CurrentCulture.Name.StartsWith("es"))
                    {
                        <span>Administre todas sus mudanzas en un solo lugar.</span>
                    }
                    else
                    {
                        <span>Manage all your moves in one place.</span>
                    }
                </p>
            </div>
            <div class="mt-4 sm:mt-0">
                <a href="/create-move" class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500">
                    <svg class="-ml-1 mr-2 h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd" />
                    </svg>
                    @L["CreateMove"]
                </a>
            </div>
        </div>
    </div>

    <!-- Filter options -->
    <div class="bg-white dark:bg-gray-800 shadow-sm rounded-lg p-4 mb-6">
        <div class="grid gap-4 md:grid-cols-12">
            <div class="md:col-span-5">
                <label for="status-filter" class="block text-sm font-medium text-gray-700 dark:text-gray-300">
                    @L["FilterByStatus"]
                </label>
                <select id="status-filter"
                        @bind="selectedStatus"
                        class="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm rounded-md">
                    <option value="">@L["AllStatuses"]</option>
                    @foreach (MudanzaStatus status in Enum.GetValues(typeof(MudanzaStatus)))
                    {
                        <option value="@status">@L[$"Status_{status}"]</option>
                    }
                </select>
            </div>
            <div class="md:col-span-5">
                <label for="search-term" class="block text-sm font-medium text-gray-700 dark:text-gray-300">
                    @L["SearchByName"]
                </label>
                <div class="mt-1 relative rounded-md shadow-sm">
                    <input type="text"
                           id="search-term"
                           @bind="searchTerm"
                           placeholder="@L["SearchPlaceholder"]"
                           class="focus:ring-primary-500 focus:border-primary-500 block w-full pr-10 sm:text-sm border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white rounded-md" />
                    <div class="absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none">
                        <svg class="h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd" />
                        </svg>
                    </div>
                </div>
            </div>
            <div class="md:col-span-2 flex items-end">
                <div class="flex space-x-2 w-full">
                    <button type="button"
                            @onclick="ApplyFilters"
                            class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 flex-grow">
                        <svg class="-ml-1 mr-2 h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd" />
                        </svg>
                        @L["Filter"]
                    </button>
                    <button type="button"
                            @onclick="ClearFilters"
                            class="inline-flex items-center justify-center px-4 py-2 border border-gray-300 dark:border-gray-600 text-sm font-medium rounded-md shadow-sm text-gray-700 dark:text-gray-200 bg-white dark:bg-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500">
                        <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd" />
                        </svg>
                    </button>
                </div>
            </div>
        </div>
    </div>

    @if (isLoading)
    {
        <div class="flex justify-center items-center h-64">
            <div class="animate-spin rounded-full h-16 w-16 border-t-2 border-b-2 border-primary-600"></div>
        </div>
    }
    else if (userMudanzas == null || !userMudanzas.Any())
    {
        <div class="bg-white dark:bg-gray-800 shadow-sm rounded-lg p-6 text-center">
            <div class="py-12">
                <svg class="mx-auto h-20 w-20 text-gray-400 dark:text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
                </svg>
                <h3 class="mt-4 text-xl font-medium text-gray-900 dark:text-white">
                    @if (CultureInfo.CurrentCulture.Name.StartsWith("es"))
                    {
                        <span>Aún no tiene mudanzas</span>
                    }
                    else
                    {
                        <span>You don't have any moves yet</span>
                    }
                </h3>
                <p class="mt-2 text-sm text-gray-500 dark:text-gray-400">
                    @if (CultureInfo.CurrentCulture.Name.StartsWith("es"))
                    {
                        <span>Cree una nueva mudanza para comenzar a organizar su traslado</span>
                    }
                    else
                    {
                        <span>Create a new move to start organizing your relocation</span>
                    }
                </p>
                <div class="mt-6">
                    <a href="/create-move" class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500">
                        <svg class="-ml-1 mr-2 h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd" />
                        </svg>
                        @L["CreateMove"]
                    </a>
                </div>
            </div>
        </div>
    }
    else if (filteredMudanzas == null || !filteredMudanzas.Any())
    {
        <div class="bg-white dark:bg-gray-800 shadow-sm rounded-lg p-6 text-center">
            <div class="py-12">
                <svg class="mx-auto h-20 w-20 text-gray-400 dark:text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01"></path>
                </svg>
                <h3 class="mt-4 text-xl font-medium text-gray-900 dark:text-white">
                    @L["NoMovesMatchFilter"]
                </h3>
                <div class="mt-6">
                    <button type="button"
                            @onclick="ClearFilters"
                            class="inline-flex items-center px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm text-sm font-medium text-gray-700 dark:text-gray-200 bg-white dark:bg-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500">
                        <svg class="-ml-1 mr-2 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd" />
                        </svg>
                        @L["ClearFilters"]
                    </button>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            @foreach (var mudanza in filteredMudanzas)
            {
                <div class="bg-white dark:bg-gray-800 overflow-hidden shadow-sm rounded-lg">
                    <div class="px-4 py-5 sm:p-6">
                        <div class="flex justify-between items-start">
                            <div>
                                <h3 class="text-lg font-semibold text-gray-900 dark:text-white">
                                    <a href="/mudanza/@mudanza.Id" class="hover:text-primary-600 dark:hover:text-primary-400">
                                        @mudanza.Name
                                    </a>
                                </h3>
                                <div class="mt-1">
                                    <span class="@GetStatusBadgeClass(mudanza.Status) px-2 py-1 text-xs font-medium rounded-full">
                                        @L[$"Status_{mudanza.Status}"]
                                    </span>
                                </div>
                            </div>
                            <div class="flex space-x-2">
                                <a href="/mudanza/@mudanza.Id"
                                   class="inline-flex items-center p-1.5 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm text-gray-700 dark:text-gray-200 bg-white dark:bg-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500"
                                   title="@L["ViewDetails"]">
                                    <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                        <path d="M10 12a2 2 0 100-4 2 2 0 000 4z" />
                                        <path fill-rule="evenodd" d="M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z" clip-rule="evenodd" />
                                    </svg>
                                </a>
                            </div>
                        </div>

                        <div class="mt-4 grid grid-cols-2 gap-4">
                            <div>
                                <div class="text-sm text-gray-500 dark:text-gray-400">@L["Origin"]</div>
                                <div class="text-sm font-medium text-gray-900 dark:text-white mt-1">@mudanza.OriginLocation</div>
                            </div>
                            <div>
                                <div class="text-sm text-gray-500 dark:text-gray-400">@L["Destination"]</div>
                                <div class="text-sm font-medium text-gray-900 dark:text-white mt-1">@mudanza.DestinationLocation</div>
                            </div>
                            <div>
                                <div class="text-sm text-gray-500 dark:text-gray-400">@L["CreatedAt"]</div>
                                <div class="text-sm font-medium text-gray-900 dark:text-white mt-1">@mudanza.CreatedAt.ToLocalTime().ToString("MMM dd, yyyy")</div>
                            </div>
                            <div>
                                <div class="text-sm text-gray-500 dark:text-gray-400">@L["Items"]</div>
                                <div class="text-sm font-medium text-gray-900 dark:text-white mt-1">@(mudanza.Items?.Count ?? 0)</div>
                            </div>
                        </div>

                        @if (mudanza.Status == MudanzaStatus.DraftOpen || mudanza.Status == MudanzaStatus.DraftClosed)
                        {
                            <div class="mt-4 border-t border-gray-200 dark:border-gray-700 pt-4">
                                <div class="bg-blue-50 dark:bg-blue-900/20 rounded-md px-4 py-3">
                                    <div class="flex">
                                        <div class="flex-shrink-0">
                                            <svg class="h-5 w-5 text-blue-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                                <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd" />
                                            </svg>
                                        </div>
                                        <div class="ml-3 flex-1 md:flex md:justify-between">
                                            <p class="text-sm text-blue-700 dark:text-blue-300">
                                                @if (mudanza.Status == MudanzaStatus.DraftOpen)
                                                {
                                                    @if (CultureInfo.CurrentCulture.Name.StartsWith("es"))
                                                    {
                                                        <span>Puede seguir editando esta mudanza y agregar artículos.</span>
                                                    }
                                                    else
                                                    {
                                                        <span>You can continue editing this move and adding items.</span>
                                                    }
                                                }
                                                else
                                                {
                                                    @if (CultureInfo.CurrentCulture.Name.StartsWith("es"))
                                                    {
                                                        <span>Esta mudanza está lista para ser enviada para revisión.</span>
                                                    }
                                                    else
                                                    {
                                                        <span>This move is ready to be submitted for review.</span>
                                                    }
                                                }
                                            </p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }

                        <div class="mt-4 flex justify-between">
                            <a href="/mudanza/@mudanza.Id"
                               class="inline-flex items-center px-4 py-2 border border-gray-300 dark:border-gray-600 shadow-sm text-sm font-medium rounded-md text-gray-700 dark:text-gray-200 bg-white dark:bg-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500">
                                <svg class="-ml-1 mr-2 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                    <path d="M10 12a2 2 0 100-4 2 2 0 000 4z" />
                                    <path fill-rule="evenodd" d="M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z" clip-rule="evenodd" />
                                </svg>
                                @L["ViewDetails"]
                            </a>

                            @if (mudanza.Status == MudanzaStatus.DraftClosed)
                            {
                                <button type="button"
                                        @onclick="@(() => SubmitForReview(mudanza.Id))"
                                        class="inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500">
                                    <svg class="-ml-1 mr-2 h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                        <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
                                    </svg>
                                    @L["SubmitForReview"]
                                </button>
                            }
                            else if (mudanza.Status == MudanzaStatus.DraftOpen)
                            {
                                <button type="button"
                                        @onclick="@(() => CloseDraft(mudanza.Id))"
                                        class="inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-gray-600 hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500">
                                    <svg class="-ml-1 mr-2 h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                        <path fill-rule="evenodd" d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z" clip-rule="evenodd" />
                                    </svg>
                                    @L["FinalizeDraft"]
                                </button>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@code {
    private bool isLoading = true;
    private IEnumerable<Mudanza> userMudanzas;
    private IEnumerable<Mudanza> filteredMudanzas;
    private string selectedStatus = "";
    private string searchTerm = "";
    private string userId;

    protected override async Task OnInitializedAsync()
    {
        await GetUserIdAsync();
        await LoadUserMudanzasAsync();
    }

    private async Task GetUserIdAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        userId = authState.User.FindFirst(ClaimTypes.NameIdentifier)?.Value;

        if (string.IsNullOrEmpty(userId))
        {
            ToastService.Error(L["UserNotAuthenticated"]);
            NavigationManager.NavigateTo("/Identity/Account/Login");
        }
    }

    private async Task LoadUserMudanzasAsync()
    {
        try
        {
            isLoading = true;

            if (string.IsNullOrEmpty(userId))
                return;

            // Load user's moves
            userMudanzas = await MudanzaService.GetUserMudanzasAsync(userId);

            // Apply filters if they exist
            ApplyFilters();
        }
        catch (Exception ex)
        {
            ToastService.Error(L["ErrorLoadingMoves"]);
            Console.Error.WriteLine($"Error loading mudanzas: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

    private void ApplyFilters()
    {
        filteredMudanzas = userMudanzas;

        // Filter by status
        if (!string.IsNullOrEmpty(selectedStatus) && Enum.TryParse<MudanzaStatus>(selectedStatus, out var status))
        {
            filteredMudanzas = filteredMudanzas.Where(m => m.Status == status);
        }

        // Filter by search term
        if (!string.IsNullOrWhiteSpace(searchTerm))
        {
            var term = searchTerm.ToLower();
            filteredMudanzas = filteredMudanzas.Where(m =>
                (m.Name?.ToLower().Contains(term) ?? false) ||
                (m.OriginLocation?.ToLower().Contains(term) ?? false) ||
                (m.DestinationLocation?.ToLower().Contains(term) ?? false));
        }
    }

    private void ClearFilters()
    {
        selectedStatus = "";
        searchTerm = "";
        filteredMudanzas = userMudanzas;
    }

    private async Task CloseDraft(int mudanzaId)
    {
        try
        {
            var result = await MudanzaService.ChangeStatusAsync(mudanzaId, MudanzaStatus.DraftClosed, userId);

            if (result)
            {
                ToastService.Success(L["DraftClosedSuccess"]);
                await LoadUserMudanzasAsync();
            }
            else
            {
                ToastService.Error(L["ErrorClosingDraft"]);
            }
        }
        catch (Exception ex)
        {
            ToastService.Error(L["ErrorClosingDraft"]);
            Console.Error.WriteLine($"Error closing draft: {ex.Message}");
        }
    }

    private async Task SubmitForReview(int mudanzaId)
    {
        try
        {
            var result = await MudanzaService.SubmitForReviewAsync(mudanzaId, userId);

            if (result)
            {
                ToastService.Success(L["MoveSubmittedSuccess"]);
                await LoadUserMudanzasAsync();
            }
            else
            {
                ToastService.Error(L["ErrorSubmittingMove"]);
            }
        }
        catch (Exception ex)
        {
            ToastService.Error(L["ErrorSubmittingMove"]);
            Console.Error.WriteLine($"Error submitting move for review: {ex.Message}");
        }
    }

    private string GetStatusBadgeClass(MudanzaStatus status)
    {
        return status switch
        {
            MudanzaStatus.DraftOpen => "bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300",
            MudanzaStatus.DraftClosed => "bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300",
            MudanzaStatus.InReview => "bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-400",
            MudanzaStatus.WaitingForDocuments => "bg-amber-100 text-amber-800 dark:bg-amber-900/30 dark:text-amber-400",
            MudanzaStatus.ReceivedInWarehouseUS => "bg-primary-100 text-primary-800 dark:bg-primary-900/30 dark:text-primary-400",
            MudanzaStatus.ReceivedInWarehouseMX => "bg-primary-100 text-primary-800 dark:bg-primary-900/30 dark:text-primary-400",
            MudanzaStatus.WaitingForCrossing => "bg-amber-100 text-amber-800 dark:bg-amber-900/30 dark:text-amber-400",
            MudanzaStatus.WaitingForShipment => "bg-amber-100 text-amber-800 dark:bg-amber-900/30 dark:text-amber-400",
            MudanzaStatus.InTransit => "bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-400",
            MudanzaStatus.Delivered => "bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-400",
            MudanzaStatus.Completed => "bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-400",
            _ => "bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300"
        };
    }
}