@* MudanzaApp/Pages/Dashboard.razor *@
@page "/dashboard"
@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization
@attribute [Authorize]
@inject IMudanzaService MudanzaService
@inject IStringLocalizer<SharedResource> L
@inject NavigationManager NavigationManager
@inject IToastService ToastService
@inject AuthenticationStateProvider AuthStateProvider
@inject IJSRuntime JSRuntime

<PageTitle>@L["Dashboard"] - @L["AppName"]</PageTitle>

    <div class="py-4">
        <!-- Page header -->
        <div class="bg-white dark:bg-gray-800 shadow-sm rounded-lg px-4 py-5 border-b border-gray-200 dark:border-gray-700 sm:px-6 mb-6">
            <div class="flex flex-wrap items-center justify-between">
                <div>
                    <h1 class="text-3xl font-bold text-gray-900 dark:text-white">
                        @L["Dashboard"]
                </h1>
                <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">
                    @if (CultureInfo.CurrentCulture.Name.StartsWith("es"))
                    {
                        <span>Bienvenido, administre sus mudanzas y vea sus estadísticas.</span>
                    }
                    else
                    {
                        <span>Welcome, manage your moves and see your statistics.</span>
                    }
                </p>
            </div>
            <div class="mt-4 sm:mt-0">
                <a href="/create-move" class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500">
                    <svg class="-ml-1 mr-2 h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd" />
                    </svg>
                    @L["CreateMove"]
                </a>
            </div>
        </div>
    </div>

    @if (isLoading)
    {
        <div class="flex justify-center items-center h-64">
            <div class="animate-spin rounded-full h-16 w-16 border-t-2 border-b-2 border-primary-600"></div>
        </div>
    }
    else if (userMudanzas == null || !userMudanzas.Any())
    {
        <div class="bg-white dark:bg-gray-800 shadow-sm rounded-lg p-6 text-center">
            <div class="py-12">
                <svg class="mx-auto h-20 w-20 text-gray-400 dark:text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
                </svg>
                <h3 class="mt-4 text-xl font-medium text-gray-900 dark:text-white">
                    @if (CultureInfo.CurrentCulture.Name.StartsWith("es"))
                    {
                        <span>Aún no tiene mudanzas</span>
                    }
                    else
                    {
                        <span>You don't have any moves yet</span>
                    }
                </h3>
                <p class="mt-2 text-sm text-gray-500 dark:text-gray-400">
                    @if (CultureInfo.CurrentCulture.Name.StartsWith("es"))
                    {
                        <span>Cree una nueva mudanza para comenzar a organizar su traslado</span>
                    }
                    else
                    {
                        <span>Create a new move to start organizing your relocation</span>
                    }
                </p>
                <div class="mt-6">
                    <a href="/create-move" class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500">
                        <svg class="-ml-1 mr-2 h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd" />
                        </svg>
                        @L["CreateMove"]
                    </a>
                </div>
            </div>
        </div>
    }
    else
    {
        <!-- Stats cards -->
        <div class="grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-4 mb-6">
            <!-- In Progress -->
            <div class="bg-white dark:bg-gray-800 overflow-hidden shadow-sm rounded-lg">
                <div class="px-4 py-5 sm:p-6">
                    <div class="flex items-center">
                        <div class="flex-shrink-0 bg-primary-600 rounded-md p-3">
                            <svg class="h-6 w-6 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
                            </svg>
                        </div>
                        <div class="ml-5 w-0 flex-1">
                            <dl>
                                <dt class="text-sm font-medium text-gray-500 dark:text-gray-400 truncate">
                                    @L["InProgress"]
                                </dt>
                                <dd>
                                    <div class="text-3xl font-semibold text-gray-900 dark:text-white">
                                        @inProgressCount
                                    </div>
                                </dd>
                            </dl>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Completed -->
            <div class="bg-white dark:bg-gray-800 overflow-hidden shadow-sm rounded-lg">
                <div class="px-4 py-5 sm:p-6">
                    <div class="flex items-center">
                        <div class="flex-shrink-0 bg-green-600 rounded-md p-3">
                            <svg class="h-6 w-6 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                        </div>
                        <div class="ml-5 w-0 flex-1">
                            <dl>
                                <dt class="text-sm font-medium text-gray-500 dark:text-gray-400 truncate">
                                    @L["Completed"]
                                </dt>
                                <dd>
                                    <div class="text-3xl font-semibold text-gray-900 dark:text-white">
                                        @completedCount
                                    </div>
                                </dd>
                            </dl>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Total Items -->
            <div class="bg-white dark:bg-gray-800 overflow-hidden shadow-sm rounded-lg">
                <div class="px-4 py-5 sm:p-6">
                    <div class="flex items-center">
                        <div class="flex-shrink-0 bg-blue-600 rounded-md p-3">
                            <svg class="h-6 w-6 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4"></path>
                            </svg>
                        </div>
                        <div class="ml-5 w-0 flex-1">
                            <dl>
                                <dt class="text-sm font-medium text-gray-500 dark:text-gray-400 truncate">
                                    @L["TotalItems"]
                                </dt>
                                <dd>
                                    <div class="text-3xl font-semibold text-gray-900 dark:text-white">
                                        @totalItems
                                    </div>
                                </dd>
                            </dl>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Actions -->
            <div class="bg-white dark:bg-gray-800 overflow-hidden shadow-sm rounded-lg">
                <div class="px-4 py-5 sm:p-6">
                    <div class="flex flex-col h-full justify-center">
                        <h3 class="text-sm font-medium text-gray-500 dark:text-gray-400 mb-4">@L["QuickActions"]</h3>
                        <div class="space-y-2">
                            <a href="/create-move" class="inline-flex w-full justify-center items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500">
                                @L["NewMove"]
                            </a>
                            <a href="/my-moves" class="inline-flex w-full justify-center items-center px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm text-sm font-medium text-gray-700 dark:text-gray-200 bg-white dark:bg-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500">
                                @L["ViewAllMoves"]
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Recent moves -->
        <div class="bg-white dark:bg-gray-800 shadow-sm overflow-hidden rounded-lg mb-6">
            <div class="px-4 py-5 border-b border-gray-200 dark:border-gray-700 sm:px-6">
                <h3 class="text-lg leading-6 font-medium text-gray-900 dark:text-white">@L["RecentMoves"]</h3>
            </div>
            <div class="bg-white dark:bg-gray-800 overflow-hidden sm:rounded-md">
                <ul role="list" class="divide-y divide-gray-200 dark:divide-gray-700">
                    @foreach (var mudanza in recentMudanzas)
                    {
                        <li>
                            <a href="/mudanza/@mudanza.Id" class="block hover:bg-gray-50 dark:hover:bg-gray-700">
                                <div class="px-4 py-4 sm:px-6">
                                    <div class="flex items-center justify-between">
                                        <div class="flex items-center">
                                            <p class="text-sm font-medium text-primary-600 truncate">
                                                @mudanza.Name
                                            </p>
                                            <div class="ml-2 flex-shrink-0">
                                                <span class="@GetStatusBadgeClass(mudanza.Status) px-2 inline-flex text-xs leading-5 font-semibold rounded-full">
                                                    @L[$"Status_{mudanza.Status}"]
                                                </span>
                                            </div>
                                        </div>
                                        <div class="ml-2 flex-shrink-0">
                                            <svg class="h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                                <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                                            </svg>
                                        </div>
                                    </div>
                                    <div class="mt-2 sm:flex sm:justify-between">
                                        <div class="sm:flex">
                                            <p class="flex items-center text-sm text-gray-500 dark:text-gray-400">
                                                <svg class="flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                                    <path fill-rule="evenodd" d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd" />
                                                </svg>
                                                @mudanza.OriginLocation
                                            </p>
                                            <p class="mt-2 flex items-center text-sm text-gray-500 dark:text-gray-400 sm:mt-0 sm:ml-6">
                                                <svg class="flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                                    <path fill-rule="evenodd" d="M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z" clip-rule="evenodd" />
                                                </svg>
                                                @mudanza.DestinationLocation
                                            </p>
                                        </div>
                                        <div class="mt-2 flex items-center text-sm text-gray-500 dark:text-gray-400 sm:mt-0">
                                            <svg class="flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                                <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd" />
                                            </svg>
                                            <p>
                                                @mudanza.CreatedAt.ToLocalTime().ToString("MMM dd, yyyy")
                                            </p>
                                        </div>
                                    </div>
                                </div>
                            </a>
                        </li>
                    }
                </ul>
                @if (userMudanzas.Count() > recentMudanzas.Count())
                {
                    <div class="bg-gray-50 dark:bg-gray-700 px-4 py-4 sm:px-6 text-center">
                        <a href="/my-moves" class="inline-flex items-center px-3 py-1.5 border border-gray-300 dark:border-gray-600 shadow-sm text-sm font-medium rounded-md text-gray-700 dark:text-gray-200 bg-white dark:bg-gray-600 hover:bg-gray-50 dark:hover:bg-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500">
                            <svg class="-ml-1 mr-2 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                <path d="M10 12a2 2 0 100-4 2 2 0 000 4z" />
                                <path fill-rule="evenodd" d="M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z" clip-rule="evenodd" />
                            </svg>
                            @L["ViewAllMoves"]
                        </a>
                    </div>
                }
            </div>
        </div>

        <!-- Status chart -->
        <div class="bg-white dark:bg-gray-800 shadow-sm overflow-hidden rounded-lg">
            <div class="px-4 py-5 border-b border-gray-200 dark:border-gray-700 sm:px-6">
                <h3 class="text-lg leading-6 font-medium text-gray-900 dark:text-white">@L["MovesByStatus"]</h3>
            </div>
            <div class="px-4 py-5 sm:p-6">
                <div class="flex justify-center">
                    <div class="w-full max-w-lg">
                        <div class="h-64 flex items-center justify-center">
                            <!-- Placeholder for chart - you would implement with chart.js or similar -->
                            <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4 w-full">
                                @foreach (var statusEntry in statusCounts)
                                {
                                    <div class="bg-gray-50 dark:bg-gray-700 rounded-lg p-4 text-center">
                                        <span class="@GetStatusBadgeClass(statusEntry.Key) px-2 inline-flex text-xs leading-5 font-semibold rounded-full">
                                            @L[$"Status_{statusEntry.Key}"]
                                        </span>
                                        <p class="mt-2 text-2xl font-semibold text-gray-900 dark:text-white">@statusEntry.Value</p>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code {
    private bool isLoading = true;
    private IEnumerable<Mudanza> userMudanzas;
    private IEnumerable<Mudanza> recentMudanzas;
    private int inProgressCount;
    private int completedCount;
    private int totalItems;
    private Dictionary<MudanzaStatus, int> statusCounts = new();
    private List<string> chartColors = new()
    {
        "#4287f5", "#42c9f5", "#42f59e", "#f5d742", "#f59c42", "#f54e42", "#9442f5", "#f542e2"
    };

    protected override async Task OnInitializedAsync()
    {
        await LoadUserMudanzasAsync();
    }

    private async Task LoadUserMudanzasAsync()
    {
        try
        {
            isLoading = true;

            // Get current user
            var authState = await AuthStateProvider.GetAuthenticationStateAsync();
            var userId = authState.User.FindFirst(ClaimTypes.NameIdentifier)?.Value;

            if (string.IsNullOrEmpty(userId))
            {
                ToastService.Error(L["ErrorLoadingMoves"]);
                return;
            }

            // Load user's moves
            userMudanzas = await MudanzaService.GetUserMudanzasAsync(userId);

            // Calculate statistics
            CalculateStatistics();

            // Get recent moves (latest 3)
            recentMudanzas = userMudanzas.OrderByDescending(m => m.CreatedAt).Take(3);
        }
        catch (Exception ex)
        {
            ToastService.Error(L["ErrorLoadingMoves"]);
            Console.Error.WriteLine($"Error loading mudanzas: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

    private void CalculateStatistics()
    {
        if (userMudanzas == null)
            return;

        // Count in-progress moves (not completed)
        inProgressCount = userMudanzas.Count(m => m.Status != MudanzaStatus.Completed);

        // Count completed moves
        completedCount = userMudanzas.Count(m => m.Status == MudanzaStatus.Completed);

        // Count total items
        totalItems = userMudanzas.Sum(m => m.Items?.Count ?? 0);

        // Count moves by status
        statusCounts = userMudanzas
            .GroupBy(m => m.Status)
            .ToDictionary(g => g.Key, g => g.Count());
    }

    private string GetStatusBadgeClass(MudanzaStatus status)
    {
        return status switch
        {
            MudanzaStatus.DraftOpen => "bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300",
            MudanzaStatus.DraftClosed => "bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300",
            MudanzaStatus.InReview => "bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-400",
            MudanzaStatus.WaitingForDocuments => "bg-amber-100 text-amber-800 dark:bg-amber-900/30 dark:text-amber-400",
            MudanzaStatus.ReceivedInWarehouseUS => "bg-primary-100 text-primary-800 dark:bg-primary-900/30 dark:text-primary-400",
            MudanzaStatus.ReceivedInWarehouseMX => "bg-primary-100 text-primary-800 dark:bg-primary-900/30 dark:text-primary-400",
            MudanzaStatus.WaitingForCrossing => "bg-amber-100 text-amber-800 dark:bg-amber-900/30 dark:text-amber-400",
            MudanzaStatus.WaitingForShipment => "bg-amber-100 text-amber-800 dark:bg-amber-900/30 dark:text-amber-400",
            MudanzaStatus.InTransit => "bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-400",
            MudanzaStatus.Delivered => "bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-400",
            MudanzaStatus.Completed => "bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-400",
            _ => "bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300"
        };
    }
}