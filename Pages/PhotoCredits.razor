@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@page "/photo-credits"
@attribute [Authorize]
@inject IPhotoCreditService PhotoCreditService
@inject IStripeService StripeService
@inject IStringLocalizer<SharedResource> L
@inject NavigationManager NavigationManager
@inject IToastService ToastService
@inject AuthenticationStateProvider AuthStateProvider
@inject IJSRuntime JSRuntime

<PageTitle>@L["PhotoCredits"] - @L["AppName"]</PageTitle>

    <div class="py-4">
        <!-- Page header -->
        <div class="bg-white dark:bg-gray-800 shadow-sm rounded-lg px-4 py-5 border-b border-gray-200 dark:border-gray-700 sm:px-6 mb-6">
            <h1 class="text-3xl font-bold text-gray-900 dark:text-white">
                @L["PhotoCredits"]
        </h1>
        <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">
            @if (CultureInfo.CurrentCulture.Name.StartsWith("es"))
            {
                <span>Compre créditos para usar nuestra función de análisis de fotos con IA.</span>
            }
            else
            {
                <span>Purchase credits to use our AI photo analysis feature.</span>
            }
        </p>
    </div>

    @if (isLoading)
    {
        <div class="flex justify-center items-center h-64">
            <div class="animate-spin rounded-full h-16 w-16 border-t-2 border-b-2 border-primary-600"></div>
        </div>
    }
    else
    {
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
            <div class="md:col-span-3">
                <div class="bg-gradient-to-br from-primary-600 to-primary-800 dark:from-primary-700 dark:to-primary-900 shadow-lg rounded-lg overflow-hidden">
                    <div class="px-6 py-8 sm:p-10 sm:pb-6">
                        <div class="flex justify-center">
                            <div class="flex items-center justify-center h-20 w-20 rounded-full bg-white bg-opacity-10">
                                <svg class="h-10 w-10 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z" />
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 13a3 3 0 11-6 0 3 3 0 016 0z" />
                                </svg>
                            </div>
                        </div>
                        <div class="mt-5 text-center">
                            <h3 class="text-2xl font-medium text-white">@L["AvailableCredits"]</h3>
                            <div class="mt-2 text-5xl font-bold text-white">@availableCredits</div>
                            <p class="mt-3 text-sm text-primary-100">
                                @if (CultureInfo.CurrentCulture.Name.StartsWith("es"))
                                {
                                    <span>Los créditos se utilizan cuando analiza fotos para identificar artículos en su mudanza.</span>
                                }
                                else
                                {
                                    <span>Credits are used when you analyze photos to identify items in your move.</span>
                                }
                            </p>
                        </div>
                    </div>
                    <div class="px-6 pb-8 sm:px-10 sm:pt-4 bg-primary-700 dark:bg-primary-800">
                        @if (availableCredits <= 5)
                        {
                            <div class="rounded-md bg-primary-800 dark:bg-primary-900 p-4 mt-4">
                                <div class="flex">
                                    <div class="flex-shrink-0">
                                        <svg class="h-5 w-5 text-primary-300" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                            <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd" />
                                        </svg>
                                    </div>
                                    <div class="ml-3 flex-1">
                                        <p class="text-sm text-primary-200">
                                            @if (availableCredits == 0)
                                            {
                                                @if (CultureInfo.CurrentCulture.Name.StartsWith("es"))
                                                {
                                                    <span>Se han agotado los créditos. Compre más para continuar usando la función de análisis de fotos.</span>
                                                }
                                                else
                                                {
                                                    <span>You've run out of credits. Purchase more to continue using the photo analysis feature.</span>
                                                }
                                            }
                                            else
                                            {
                                                @if (CultureInfo.CurrentCulture.Name.StartsWith("es"))
                                                {
                                                    <span>Sus créditos se están agotando. Considere comprar más pronto.</span>
                                                }
                                                else
                                                {
                                                    <span>Your credits are running low. Consider purchasing more soon.</span>
                                                }
                                            }
                                        </p>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

        <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-6 text-center">
            @L["PhotoCreditPackages"]
        </h2>

        <div class="grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-3 mb-8">
            @if (creditPackages == null || !creditPackages.Any())
            {
                <div class="col-span-3">
                    <div class="bg-white dark:bg-gray-800 shadow-sm rounded-lg p-6 text-center">
                        <div class="py-8">
                            <svg class="mx-auto h-12 w-12 text-gray-400 dark:text-gray-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                            </svg>
                            <h3 class="mt-4 text-lg font-medium text-gray-900 dark:text-white">
                                @L["ErrorLoadingPackages"]
                            </h3>
                            <p class="mt-2 text-sm text-gray-500 dark:text-gray-400">
                                @if (CultureInfo.CurrentCulture.Name.StartsWith("es"))
                                {
                                    <span>No se pudieron cargar los paquetes de créditos. Por favor, inténtelo de nuevo más tarde.</span>
                                }
                                else
                                {
                                    <span>Credit packages could not be loaded. Please try again later.</span>
                                }
                            </p>
                        </div>
                    </div>
                </div>
            }
            else
            {
                @foreach (var package in creditPackages)
                {
                    <div class="bg-white dark:bg-gray-800 shadow-sm rounded-lg overflow-hidden @(package.IsMostPopular ? "ring-2 ring-primary-500" : "")">
                        @if (package.IsMostPopular)
                        {
                            <div class="bg-primary-500 text-white text-sm font-semibold text-center py-1.5">
                                @L["MostPopular"]
                            </div>
                        }
                        <div class="px-6 py-8">
                            <div class="text-center">
                                <h3 class="text-lg font-medium text-gray-900 dark:text-white">@package.Credits @L["Credits"]</h3>
                                <div class="mt-4 flex items-baseline justify-center">
                                    <span class="text-4xl font-extrabold text-gray-900 dark:text-white">$@package.Price.ToString("N2")</span>
                                </div>
                                <p class="mt-4 text-sm text-gray-500 dark:text-gray-400">@package.Description</p>
                            </div>
                        </div>
                        <div class="px-6 pb-8">
                            <button type="button"
                                    @onclick="@(() => PurchasePackage(package))"
                                    disabled="@isProcessingPayment"
                                    class="w-full flex items-center justify-center px-4 py-2 border border-transparent rounded-md shadow-sm text-base font-medium text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 @(isProcessingPayment ? "opacity-50 cursor-not-allowed" : "")">
                                @if (isProcessingPayment && currentPackage?.Credits == package.Credits)
                                {
                                    <div class="inline-block h-4 w-4 animate-spin rounded-full border-2 border-solid border-current border-r-transparent mr-2"></div>
                                    @L["Processing"]
                                }
                                else
                                {
                                    <svg class="-ml-1 mr-2 h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                        <path d="M4 4a2 2 0 00-2 2v1h16V6a2 2 0 00-2-2H4z" />
                                        <path fill-rule="evenodd" d="M18 9H2v5a2 2 0 002 2h12a2 2 0 002-2V9zM4 13a1 1 0 011-1h1a1 1 0 110 2H5a1 1 0 01-1-1zm5-1a1 1 0 100 2h1a1 1 0 100-2H9z" clip-rule="evenodd" />
                                    </svg>
                                    @L["BuyCredits"]
                                }
                            </button>
                        </div>
                    </div>
                }
            }
        </div>

        <div class="bg-white dark:bg-gray-800 shadow-sm rounded-lg overflow-hidden mb-8">
            <div class="px-4 py-5 border-b border-gray-200 dark:border-gray-700 sm:px-6">
                <h3 class="text-lg font-medium text-gray-900 dark:text-white">@L["PhotoCreditsFAQ"]</h3>
            </div>
            <div class="divide-y divide-gray-200 dark:divide-gray-700">
                <div class="px-4 py-5 sm:px-6" x-data="{ open: false }">
                    <button type="button"
                            @onclick="@(() => ToggleFAQ(1))"
                            class="w-full flex justify-between items-center text-left focus:outline-none">
                        <span class="text-base font-medium text-gray-900 dark:text-white">
                            @if (CultureInfo.CurrentCulture.Name.StartsWith("es"))
                            {
                                <span>¿Qué son los créditos de fotos?</span>
                            }
                            else
                            {
                                <span>What are photo credits?</span>
                            }
                        </span>
                        <svg class="h-5 w-5 text-gray-500 transition-transform duration-200 @(openFAQ1 ? "transform rotate-180" : "")" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
                        </svg>
                    </button>
                    @if (openFAQ1)
                    {
                        <div class="mt-4 text-sm text-gray-500 dark:text-gray-400">
                            @if (CultureInfo.CurrentCulture.Name.StartsWith("es"))
                            {
                                <p>Los créditos de fotos le permiten utilizar nuestra función de análisis de fotos con IA. Cada vez que analiza una foto para identificar un artículo, se utiliza un crédito.</p>
                            }
                            else
                            {
                                <p>Photo credits allow you to use our AI photo analysis feature. Each time you analyze a photo to identify an item, one credit is used.</p>
                            }
                        </div>
                    }
                </div>
                <div class="px-4 py-5 sm:px-6" x-data="{ open: false }">
                    <button type="button"
                            @onclick="@(() => ToggleFAQ(2))"
                            class="w-full flex justify-between items-center text-left focus:outline-none">
                        <span class="text-base font-medium text-gray-900 dark:text-white">
                            @if (CultureInfo.CurrentCulture.Name.StartsWith("es"))
                            {
                                <span>¿Cómo funciona el análisis de fotos?</span>
                            }
                            else
                            {
                                <span>How does photo analysis work?</span>
                            }
                        </span>
                        <svg class="h-5 w-5 text-gray-500 transition-transform duration-200 @(openFAQ2 ? "transform rotate-180" : "")" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
                        </svg>
                    </button>
                    @if (openFAQ2)
                    {
                        <div class="mt-4 text-sm text-gray-500 dark:text-gray-400">
                            @if (CultureInfo.CurrentCulture.Name.StartsWith("es"))
                            {
                                <p>Nuestra tecnología de IA analiza su foto y identifica automáticamente el artículo en la imagen. Proporciona un nombre, descripción, categoría y cantidad estimada. Usted solo necesita completar detalles adicionales como el peso, valor y dimensiones.</p>
                            }
                            else
                            {
                                <p>Our AI technology analyzes your photo and automatically identifies the item in the image. It provides a name, description, category, and estimated quantity. You just need to fill in additional details like weight, value, and dimensions.</p>
                            }
                        </div>
                    }
                </div>
                <div class="px-4 py-5 sm:px-6" x-data="{ open: false }">
                    <button type="button"
                            @onclick="@(() => ToggleFAQ(3))"
                            class="w-full flex justify-between items-center text-left focus:outline-none">
                        <span class="text-base font-medium text-gray-900 dark:text-white">
                            @if (CultureInfo.CurrentCulture.Name.StartsWith("es"))
                            {
                                <span>¿Caducan los créditos?</span>
                            }
                            else
                            {
                                <span>Do credits expire?</span>
                            }
                        </span>
                        <svg class="h-5 w-5 text-gray-500 transition-transform duration-200 @(openFAQ3 ? "transform rotate-180" : "")" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
                        </svg>
                    </button>
                    @if (openFAQ3)
                    {
                        <div class="mt-4 text-sm text-gray-500 dark:text-gray-400">
                            @if (CultureInfo.CurrentCulture.Name.StartsWith("es"))
                            {
                                <p>No, los créditos de fotos no caducan y se mantienen en su cuenta hasta que los utilice.</p>
                            }
                            else
                            {
                                <p>No, photo credits do not expire and remain in your account until you use them.</p>
                            }
                        </div>
                    }
                </div>
                <div class="px-4 py-5 sm:px-6" x-data="{ open: false }">
                    <button type="button"
                            @onclick="@(() => ToggleFAQ(4))"
                            class="w-full flex justify-between items-center text-left focus:outline-none">
                        <span class="text-base font-medium text-gray-900 dark:text-white">
                            @if (CultureInfo.CurrentCulture.Name.StartsWith("es"))
                            {
                                <span>¿Cómo se procesa el pago?</span>
                            }
                            else
                            {
                                <span>How is payment processed?</span>
                            }
                        </span>
                        <svg class="h-5 w-5 text-gray-500 transition-transform duration-200 @(openFAQ4 ? "transform rotate-180" : "")" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
                        </svg>
                    </button>
                    @if (openFAQ4)
                    {
                        <div class="mt-4 text-sm text-gray-500 dark:text-gray-400">
                            @if (CultureInfo.CurrentCulture.Name.StartsWith("es"))
                            {
                                <p>Todos los pagos se procesan de forma segura a través de Stripe. No almacenamos su información de tarjeta de crédito.</p>
                            }
                            else
                            {
                                <p>All payments are securely processed through Stripe. We do not store your credit card information.</p>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    }
</div>

@code {
    private int availableCredits = 0;
    private bool isLoading = true;
    private bool isProcessingPayment = false;
    private string userId;
    private PhotoCreditPackage[] creditPackages;
    private PhotoCreditPackage currentPackage;

    // FAQ toggles
    private bool openFAQ1 = false;
    private bool openFAQ2 = false;
    private bool openFAQ3 = false;
    private bool openFAQ4 = false;

    protected override async Task OnInitializedAsync()
    {
        await GetUserIdAsync();
        await LoadCreditsAndPackagesAsync();
    }

    private async Task GetUserIdAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        userId = authState.User.FindFirst(ClaimTypes.NameIdentifier)?.Value;

        if (string.IsNullOrEmpty(userId))
        {
            ToastService.Error(L["UserNotAuthenticated"]);
            NavigationManager.NavigateTo("/Identity/Account/Login");
        }
    }

    private async Task LoadCreditsAndPackagesAsync()
    {
        try
        {
            isLoading = true;

            // Load available credits
            availableCredits = await PhotoCreditService.GetAvailableCreditsAsync(userId);

            // Load credit packages
            creditPackages = await StripeService.GetPhotoCreditPackagesAsync();
        }
        catch (Exception ex)
        {
            ToastService.Error(L["ErrorLoadingCredits"]);
            Console.Error.WriteLine($"Error loading credits: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task PurchasePackage(PhotoCreditPackage package)
    {
        if (isProcessingPayment)
            return;

        try
        {
            isProcessingPayment = true;
            currentPackage = package;

            // Create Stripe checkout session
            var checkoutUrl = await StripeService.CreateCheckoutSessionAsync(
                userId,
                package.Credits,
                package.Price);

            if (string.IsNullOrEmpty(checkoutUrl))
            {
                ToastService.Error(L["ErrorCreatingCheckout"]);
                return;
            }

            // Redirect user to Stripe checkout page
            NavigationManager.NavigateTo(checkoutUrl, forceLoad: true);
        }
        catch (Exception ex)
        {
            ToastService.Error(L["ErrorProcessingPayment"]);
            Console.Error.WriteLine($"Error processing payment: {ex.Message}");
        }
        finally
        {
            isProcessingPayment = false;
        }
    }

    private void ToggleFAQ(int faqIndex)
    {
        switch (faqIndex)
        {
            case 1:
                openFAQ1 = !openFAQ1;
                break;
            case 2:
                openFAQ2 = !openFAQ2;
                break;
            case 3:
                openFAQ3 = !openFAQ3;
                break;
            case 4:
                openFAQ4 = !openFAQ4;
                break;
        }
    }
}